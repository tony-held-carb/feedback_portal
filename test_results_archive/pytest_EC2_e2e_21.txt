============================= test session starts ==============================
platform linux -- Python 3.11.13, pytest-8.4.1, pluggy-1.6.0 -- /home/theld/miniconda3/envs/mini_conda_02/bin/python
cachedir: .pytest_cache
rootdir: /home/theld/code/git_repos/feedback_portal
configfile: pytest.ini
plugins: anyio-4.7.0, base-url-2.1.0, asyncio-1.1.0, playwright-0.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... [DEBUG] Using DB URI: postgresql+psycopg2://methane:methaneCH4@prj-bus-methane-aurora-postgresql-instance-1.cdae8kkz3fpi.us-west-2.rds.amazonaws.com/plumetracker
collected 87 items

tests/e2e/test_delete_testing_data.py::test_delete_testing_range_page_loads[chromium] ERROR
tests/e2e/test_delete_testing_data.py::test_min_max_id_inputs[chromium] ERROR
tests/e2e/test_delete_testing_data.py::test_dry_run_checkbox_and_preview[chromium] ERROR
tests/e2e/test_delete_testing_data.py::test_delete_button_and_real_delete[chromium] ERROR
tests/e2e/test_delete_testing_data.py::test_diagnostics_messaging[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_upload_page_loads[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_input_exists[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_drop_zone_exists[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_invalid_file_upload[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_empty_file_upload[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_large_file_upload[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::TestUploadPageElements::test_page_structure[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::TestUploadPageElements::test_form_structure[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::TestUploadPageElements::test_accessibility_features[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_list_staged_diagnostics_overlay[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::test_upload_file_only[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::test_discard_staged_file_only[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::test_upload_multiple_files_only[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::test_discard_each_staged_file_separately[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::test_upload_malformed_file_only[chromium] ERROR
tests/e2e/test_excel_upload_workflows.py::test_discard_malformed_file_only[chromium] ERROR
tests/e2e/test_feedback_updates.py::test_feedback_updates_page_loads[chromium] ERROR
tests/e2e/test_feedback_updates.py::test_feedback_updates_filter_functionality[chromium] ERROR
tests/e2e/test_feedback_updates.py::test_feedback_updates_download_csv_button[chromium] ERROR
tests/e2e/test_feedback_updates.py::test_feedback_updates_accessibility[chromium] ERROR
tests/e2e/test_feedback_updates.py::test_feedback_updates_empty_state[chromium] ERROR
tests/e2e/test_feedback_updates.py::test_feedback_updates_long_text_overflow[chromium] ERROR
tests/e2e/test_feedback_updates.py::test_feedback_updates_special_characters[chromium] ERROR
tests/e2e/test_feedback_updates.py::test_feedback_updates_date_range_boundaries[chromium] ERROR
tests/e2e/test_feedback_updates.py::test_feedback_updates_csv_download_with_filters[chromium] ERROR
tests/e2e/test_feedback_updates.py::test_feedback_updates_rapid_filter_changes[chromium] ERROR
tests/e2e/test_feedback_updates.py::test_feedback_updates_large_data_set[chromium] ERROR
tests/e2e/test_homepage.py::test_homepage_loads[chromium] ERROR
tests/e2e/test_homepage.py::test_homepage_empty_state[chromium] ERROR
tests/e2e/test_homepage.py::test_homepage_navigation_menu[chromium] ERROR
tests/e2e/test_homepage.py::test_homepage_accessibility[chromium] ERROR
tests/e2e/test_homepage.py::test_homepage_card_content_and_links[chromium] ERROR
tests/e2e/test_homepage.py::test_homepage_card_navigation[chromium] ERROR
tests/e2e/test_homepage.py::test_homepage_pagination_or_scrolling[chromium] ERROR
tests/e2e/test_homepage.py::test_homepage_special_characters_and_long_text[chromium] ERROR
tests/e2e/test_javascript_logging.py::test_diagnostics_overlay_on_diagnostic_test_page[chromium] ERROR
tests/e2e/test_list_uploads.py::test_list_uploads_page_loads[chromium] ERROR
tests/e2e/test_list_uploads.py::test_list_uploads_file_links[chromium] ERROR
tests/e2e/test_list_uploads.py::test_list_uploads_accessibility[chromium] ERROR
tests/e2e/test_list_uploads.py::test_list_uploads_empty_state[chromium] ERROR
tests/e2e/test_menu_calsmp_help.py::test_calsmp_help_menu_links[chromium] ERROR
tests/e2e/test_menu_developer_utilities.py::test_developer_utilities_menu_links_and_create_incidence[chromium] ERROR
tests/e2e/test_review_staged.py::test_hide_changes_checkbox[chromium] ERROR
tests/e2e/test_review_staged.py::test_field_search_filter[chromium] ERROR
tests/e2e/test_review_staged.py::test_change_summary_card[chromium] ERROR
tests/e2e/test_review_staged.py::test_cancel_and_save_buttons[chromium] ERROR
tests/e2e/test_review_staged.py::test_confirm_checkboxes[chromium] ERROR
tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_02_bad_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_02_bad_data.xlsx] ERROR
tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_03_blank.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_03_blank.xlsx] ERROR
tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx] ERROR
tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data_update.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data_update.xlsx] ERROR
tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_02_bad_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_02_bad_data.xlsx] ERROR
tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_02_bad_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_02_bad_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_02_bad_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_02_bad_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_02_bad_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_02_bad_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_02_bad_data.xlsx] ERROR
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_02_bad_data.xlsx] ERROR
tests/e2e/test_playwright_setup.py::test_playwright_setup SKIPPED (S...)

==================================== ERRORS ====================================
_______ ERROR at setup of test_delete_testing_range_page_loads[chromium] _______

fixturedef = <FixtureDef argname='browser' scope='session' baseid=''>
request = <SubRequest 'browser' for <Function test_delete_testing_range_page_loads[chromium]>>

    @pytest.hookimpl(wrapper=True)
    def pytest_fixture_setup(fixturedef: FixtureDef, request) -> object | None:
        asyncio_mode = _get_asyncio_mode(request.config)
        if not _is_asyncio_fixture_function(fixturedef.func):
            if asyncio_mode == Mode.STRICT:
                # Ignore async fixtures without explicit asyncio mark in strict mode
                # This applies to pytest_trio fixtures, for example
>               return (yield)
                        ^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_asyncio/plugin.py:681: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: in browser
    browser = launch_browser()
              ^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
______________ ERROR at setup of test_min_max_id_inputs[chromium] ______________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
________ ERROR at setup of test_dry_run_checkbox_and_preview[chromium] _________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
________ ERROR at setup of test_delete_button_and_real_delete[chromium] ________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
____________ ERROR at setup of test_diagnostics_messaging[chromium] ____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
______ ERROR at setup of TestExcelUpload.test_upload_page_loads[chromium] ______

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
______ ERROR at setup of TestExcelUpload.test_file_input_exists[chromium] ______

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
______ ERROR at setup of TestExcelUpload.test_drop_zone_exists[chromium] _______

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_____ ERROR at setup of TestExcelUpload.test_invalid_file_upload[chromium] _____

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
______ ERROR at setup of TestExcelUpload.test_empty_file_upload[chromium] ______

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
______ ERROR at setup of TestExcelUpload.test_large_file_upload[chromium] ______

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
____ ERROR at setup of TestUploadPageElements.test_page_structure[chromium] ____

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
____ ERROR at setup of TestUploadPageElements.test_form_structure[chromium] ____

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestUploadPageElements.test_accessibility_features[chromium] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_______ ERROR at setup of test_list_staged_diagnostics_overlay[chromium] _______

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
______________ ERROR at setup of test_upload_file_only[chromium] _______________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
__________ ERROR at setup of test_discard_staged_file_only[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_________ ERROR at setup of test_upload_multiple_files_only[chromium] __________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_____ ERROR at setup of test_discard_each_staged_file_separately[chromium] _____

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_________ ERROR at setup of test_upload_malformed_file_only[chromium] __________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_________ ERROR at setup of test_discard_malformed_file_only[chromium] _________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_________ ERROR at setup of test_feedback_updates_page_loads[chromium] _________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
____ ERROR at setup of test_feedback_updates_filter_functionality[chromium] ____

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
____ ERROR at setup of test_feedback_updates_download_csv_button[chromium] _____

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_______ ERROR at setup of test_feedback_updates_accessibility[chromium] ________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
________ ERROR at setup of test_feedback_updates_empty_state[chromium] _________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_____ ERROR at setup of test_feedback_updates_long_text_overflow[chromium] _____

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_____ ERROR at setup of test_feedback_updates_special_characters[chromium] _____

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
___ ERROR at setup of test_feedback_updates_date_range_boundaries[chromium] ____

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_feedback_updates_csv_download_with_filters[chromium] __

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
____ ERROR at setup of test_feedback_updates_rapid_filter_changes[chromium] ____

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_______ ERROR at setup of test_feedback_updates_large_data_set[chromium] _______

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_______________ ERROR at setup of test_homepage_loads[chromium] ________________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
____________ ERROR at setup of test_homepage_empty_state[chromium] _____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
__________ ERROR at setup of test_homepage_navigation_menu[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
___________ ERROR at setup of test_homepage_accessibility[chromium] ____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_______ ERROR at setup of test_homepage_card_content_and_links[chromium] _______

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
__________ ERROR at setup of test_homepage_card_navigation[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
______ ERROR at setup of test_homepage_pagination_or_scrolling[chromium] _______

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
__ ERROR at setup of test_homepage_special_characters_and_long_text[chromium] __

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_diagnostics_overlay_on_diagnostic_test_page[chromium] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
___________ ERROR at setup of test_list_uploads_page_loads[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
___________ ERROR at setup of test_list_uploads_file_links[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_________ ERROR at setup of test_list_uploads_accessibility[chromium] __________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
__________ ERROR at setup of test_list_uploads_empty_state[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
___________ ERROR at setup of test_calsmp_help_menu_links[chromium] ____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_developer_utilities_menu_links_and_create_incidence[chromium] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
____________ ERROR at setup of test_hide_changes_checkbox[chromium] ____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_____________ ERROR at setup of test_field_search_filter[chromium] _____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_____________ ERROR at setup of test_change_summary_card[chromium] _____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
___________ ERROR at setup of test_cancel_and_save_buttons[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_____________ ERROR at setup of test_confirm_checkboxes[chromium] ______________

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_incremental_upload[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_incremental_upload[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_03_blank.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_03_blank.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_incremental_upload[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_incremental_upload[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data_update.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data_update.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_incremental_upload[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_incremental_upload[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f19b47fba60>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()
                  ^^^^^^^^^^^^^^^^

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:282: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:274: in launch
    browser = browser_type.launch(**launch_options)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14494: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7f19c9a1ef50>
cb = <function Channel.send.<locals>.<lambda> at 0x7f19b47fbce0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: 
E           ╔══════════════════════════════════════════════════════╗
E           ║ Host system is missing dependencies to run browsers. ║
E           ║ Please install them with the following command:      ║
E           ║                                                      ║
E           ║     sudo playwright install-deps                     ║
E           ║                                                      ║
E           ║ Alternatively, use apt:                              ║
E           ║     sudo apt-get install libatk-bridge2.0-0\         ║
E           ║         libatspi2.0-0\                               ║
E           ║         libxkbcommon0\                               ║
E           ║         libasound2                                   ║
E           ║                                                      ║
E           ║ <3 Playwright Team                                   ║
E           ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:558: Error
=========================== short test summary info ============================
ERROR tests/e2e/test_delete_testing_data.py::test_delete_testing_range_page_loads[chromium]
ERROR tests/e2e/test_delete_testing_data.py::test_min_max_id_inputs[chromium]
ERROR tests/e2e/test_delete_testing_data.py::test_dry_run_checkbox_and_preview[chromium]
ERROR tests/e2e/test_delete_testing_data.py::test_delete_button_and_real_delete[chromium]
ERROR tests/e2e/test_delete_testing_data.py::test_diagnostics_messaging[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_upload_page_loads[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_input_exists[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_drop_zone_exists[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_invalid_file_upload[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_empty_file_upload[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_large_file_upload[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestUploadPageElements::test_page_structure[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestUploadPageElements::test_form_structure[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestUploadPageElements::test_accessibility_features[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_list_staged_diagnostics_overlay[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_upload_file_only[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_discard_staged_file_only[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_upload_multiple_files_only[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_discard_each_staged_file_separately[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_upload_malformed_file_only[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_discard_malformed_file_only[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_page_loads[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_filter_functionality[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_download_csv_button[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_accessibility[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_empty_state[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_long_text_overflow[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_special_characters[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_date_range_boundaries[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_csv_download_with_filters[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_rapid_filter_changes[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_large_data_set[chromium]
ERROR tests/e2e/test_homepage.py::test_homepage_loads[chromium] - playwright....
ERROR tests/e2e/test_homepage.py::test_homepage_empty_state[chromium] - playw...
ERROR tests/e2e/test_homepage.py::test_homepage_navigation_menu[chromium] - p...
ERROR tests/e2e/test_homepage.py::test_homepage_accessibility[chromium] - pla...
ERROR tests/e2e/test_homepage.py::test_homepage_card_content_and_links[chromium]
ERROR tests/e2e/test_homepage.py::test_homepage_card_navigation[chromium] - p...
ERROR tests/e2e/test_homepage.py::test_homepage_pagination_or_scrolling[chromium]
ERROR tests/e2e/test_homepage.py::test_homepage_special_characters_and_long_text[chromium]
ERROR tests/e2e/test_javascript_logging.py::test_diagnostics_overlay_on_diagnostic_test_page[chromium]
ERROR tests/e2e/test_list_uploads.py::test_list_uploads_page_loads[chromium]
ERROR tests/e2e/test_list_uploads.py::test_list_uploads_file_links[chromium]
ERROR tests/e2e/test_list_uploads.py::test_list_uploads_accessibility[chromium]
ERROR tests/e2e/test_list_uploads.py::test_list_uploads_empty_state[chromium]
ERROR tests/e2e/test_menu_calsmp_help.py::test_calsmp_help_menu_links[chromium]
ERROR tests/e2e/test_menu_developer_utilities.py::test_developer_utilities_menu_links_and_create_incidence[chromium]
ERROR tests/e2e/test_review_staged.py::test_hide_changes_checkbox[chromium]
ERROR tests/e2e/test_review_staged.py::test_field_search_filter[chromium] - p...
ERROR tests/e2e/test_review_staged.py::test_change_summary_card[chromium] - p...
ERROR tests/e2e/test_review_staged.py::test_cancel_and_save_buttons[chromium]
ERROR tests/e2e/test_review_staged.py::test_confirm_checkboxes[chromium] - pl...
ERROR tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_02_bad_data.xlsx]
ERROR tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_03_blank.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_03_blank.xlsx]
ERROR tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx]
ERROR tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data_update.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data_update.xlsx]
ERROR tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_02_bad_data.xlsx]
ERROR tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_02_bad_data.xlsx]
======================== 1 skipped, 86 errors in 15.86s ========================
