============================= test session starts =============================
platform win32 -- Python 3.11.13, pytest-8.4.1, pluggy-1.6.0 -- C:\Users\tonyh\miniconda3\envs\mini_conda_01\python.exe
cachedir: .pytest_cache
rootdir: D:\local\cursor\feedback_portal
plugins: anyio-4.7.0
collecting ... collected 6 items

tests/arb/portal/test_wtf_landfill.py::test_landfill_feedback_fields FAILED [ 16%]
tests/arb/portal/test_wtf_landfill.py::test_landfill_feedback_field_types FAILED [ 33%]
tests/arb/portal/test_wtf_landfill.py::test_landfill_feedback_validate FAILED [ 50%]
tests/arb/portal/test_wtf_landfill.py::test_update_contingent_selectors FAILED [ 66%]
tests/arb/portal/test_wtf_landfill.py::test_determine_contingent_fields FAILED [ 83%]
tests/arb/portal/test_wtf_landfill.py::test_landfill_feedback_dynamic_dropdowns SKIPPED [100%]

================================== FAILURES ===================================
________________________ test_landfill_feedback_fields ________________________

    def test_landfill_feedback_fields():
>       form = wtf_landfill.LandfillFeedback()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests\arb\portal\test_wtf_landfill.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:208: in __call__
    return type.__call__(cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
source\production\arb\portal\wtf_landfill.py:345: in __init__
    super().__init__(*args, **kwargs)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\flask_wtf\form.py:73: in __init__
    super().__init__(formdata=formdata, **kwargs)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:280: in __init__
    super().__init__(self._unbound_fields, meta=meta_obj, prefix=prefix)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:39: in __init__
    translations = self.meta.get_translations(self)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\flask_wtf\form.py:67: in get_translations
    if not current_app.config.get("WTF_I18N_ENABLED", True):
           ^^^^^^^^^^^^^^^^^^
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\werkzeug\local.py:318: in __get__
    obj = instance._get_current_object()
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def _get_current_object() -> T:
        try:
            obj = local.get()
        except LookupError:
>           raise RuntimeError(unbound_message) from None
E           RuntimeError: Working outside of application context.
E           
E           This typically means that you attempted to use functionality that needed
E           the current application. To solve this, set up an application context
E           with app.app_context(). See the documentation for more information.

C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\werkzeug\local.py:519: RuntimeError
_____________________ test_landfill_feedback_field_types ______________________

    def test_landfill_feedback_field_types():
>       form = wtf_landfill.LandfillFeedback()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests\arb\portal\test_wtf_landfill.py:29: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:208: in __call__
    return type.__call__(cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
source\production\arb\portal\wtf_landfill.py:345: in __init__
    super().__init__(*args, **kwargs)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\flask_wtf\form.py:73: in __init__
    super().__init__(formdata=formdata, **kwargs)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:280: in __init__
    super().__init__(self._unbound_fields, meta=meta_obj, prefix=prefix)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:39: in __init__
    translations = self.meta.get_translations(self)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\flask_wtf\form.py:67: in get_translations
    if not current_app.config.get("WTF_I18N_ENABLED", True):
           ^^^^^^^^^^^^^^^^^^
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\werkzeug\local.py:318: in __get__
    obj = instance._get_current_object()
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def _get_current_object() -> T:
        try:
            obj = local.get()
        except LookupError:
>           raise RuntimeError(unbound_message) from None
E           RuntimeError: Working outside of application context.
E           
E           This typically means that you attempted to use functionality that needed
E           the current application. To solve this, set up an application context
E           with app.app_context(). See the documentation for more information.

C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\werkzeug\local.py:519: RuntimeError
_______________________ test_landfill_feedback_validate _______________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x00000226F3A4DD10>

    def test_landfill_feedback_validate(monkeypatch):
        # Patch validators to always pass
        monkeypatch.setattr(wtf_landfill.LandfillFeedback, "validate", lambda self, extra_validators=None: True)
>       form = wtf_landfill.LandfillFeedback()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests\arb\portal\test_wtf_landfill.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:208: in __call__
    return type.__call__(cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
source\production\arb\portal\wtf_landfill.py:345: in __init__
    super().__init__(*args, **kwargs)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\flask_wtf\form.py:73: in __init__
    super().__init__(formdata=formdata, **kwargs)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:280: in __init__
    super().__init__(self._unbound_fields, meta=meta_obj, prefix=prefix)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:39: in __init__
    translations = self.meta.get_translations(self)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\flask_wtf\form.py:67: in get_translations
    if not current_app.config.get("WTF_I18N_ENABLED", True):
           ^^^^^^^^^^^^^^^^^^
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\werkzeug\local.py:318: in __get__
    obj = instance._get_current_object()
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def _get_current_object() -> T:
        try:
            obj = local.get()
        except LookupError:
>           raise RuntimeError(unbound_message) from None
E           RuntimeError: Working outside of application context.
E           
E           This typically means that you attempted to use functionality that needed
E           the current application. To solve this, set up an application context
E           with app.app_context(). See the documentation for more information.

C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\werkzeug\local.py:519: RuntimeError
______________________ test_update_contingent_selectors _______________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x00000226F3B2C590>

    def test_update_contingent_selectors(monkeypatch):
        # Patch method to avoid real contingent logic
>       form = wtf_landfill.LandfillFeedback()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests\arb\portal\test_wtf_landfill.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:208: in __call__
    return type.__call__(cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
source\production\arb\portal\wtf_landfill.py:345: in __init__
    super().__init__(*args, **kwargs)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\flask_wtf\form.py:73: in __init__
    super().__init__(formdata=formdata, **kwargs)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:280: in __init__
    super().__init__(self._unbound_fields, meta=meta_obj, prefix=prefix)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:39: in __init__
    translations = self.meta.get_translations(self)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\flask_wtf\form.py:67: in get_translations
    if not current_app.config.get("WTF_I18N_ENABLED", True):
           ^^^^^^^^^^^^^^^^^^
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\werkzeug\local.py:318: in __get__
    obj = instance._get_current_object()
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def _get_current_object() -> T:
        try:
            obj = local.get()
        except LookupError:
>           raise RuntimeError(unbound_message) from None
E           RuntimeError: Working outside of application context.
E           
E           This typically means that you attempted to use functionality that needed
E           the current application. To solve this, set up an application context
E           with app.app_context(). See the documentation for more information.

C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\werkzeug\local.py:519: RuntimeError
______________________ test_determine_contingent_fields _______________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x00000226F3A3EF10>

    def test_determine_contingent_fields(monkeypatch):
        # Patch method to avoid real contingent logic
>       form = wtf_landfill.LandfillFeedback()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests\arb\portal\test_wtf_landfill.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:208: in __call__
    return type.__call__(cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
source\production\arb\portal\wtf_landfill.py:345: in __init__
    super().__init__(*args, **kwargs)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\flask_wtf\form.py:73: in __init__
    super().__init__(formdata=formdata, **kwargs)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:280: in __init__
    super().__init__(self._unbound_fields, meta=meta_obj, prefix=prefix)
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\wtforms\form.py:39: in __init__
    translations = self.meta.get_translations(self)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\flask_wtf\form.py:67: in get_translations
    if not current_app.config.get("WTF_I18N_ENABLED", True):
           ^^^^^^^^^^^^^^^^^^
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\werkzeug\local.py:318: in __get__
    obj = instance._get_current_object()
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def _get_current_object() -> T:
        try:
            obj = local.get()
        except LookupError:
>           raise RuntimeError(unbound_message) from None
E           RuntimeError: Working outside of application context.
E           
E           This typically means that you attempted to use functionality that needed
E           the current application. To solve this, set up an application context
E           with app.app_context(). See the documentation for more information.

C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\werkzeug\local.py:519: RuntimeError
=========================== short test summary info ===========================
FAILED tests/arb/portal/test_wtf_landfill.py::test_landfill_feedback_fields
FAILED tests/arb/portal/test_wtf_landfill.py::test_landfill_feedback_field_types
FAILED tests/arb/portal/test_wtf_landfill.py::test_landfill_feedback_validate
FAILED tests/arb/portal/test_wtf_landfill.py::test_update_contingent_selectors
FAILED tests/arb/portal/test_wtf_landfill.py::test_determine_contingent_fields
======================== 5 failed, 1 skipped in 1.57s =========================
