============================= test session starts =============================
platform win32 -- Python 3.11.13, pytest-8.4.1, pluggy-1.6.0 -- C:\Users\tonyh\miniconda3\envs\mini_conda_01\python.exe
cachedir: .pytest_cache
rootdir: D:\local\cursor\feedback_portal
configfile: pytest.ini
plugins: anyio-4.7.0, asyncio-1.1.0, base-url-2.1.0, playwright-0.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 105 items / 104 deselected / 1 selected

tests/e2e/test_excel_upload_playwright_pytest.py::test_list_staged_diagnostics_overlay[chromium] FAILED [100%]

================================== FAILURES ===================================
_______________ test_list_staged_diagnostics_overlay[chromium] ________________

page = <Page url='http://127.0.0.1:5000/list_staged'>

    def test_list_staged_diagnostics_overlay(page):
        """
        E2E: Load /list_staged, check overlay for page load diagnostic, click diagnostics block send button, click discard, and check overlay updates.
        """
        page.goto("http://127.0.0.1:5000/list_staged")
        page.wait_for_load_state("networkidle")
        # Scrape overlay after page load
        overlay = page.locator('#js-diagnostics').inner_text()
        print(f"[DIAGNOSTICS OVERLAY after load] {overlay}")
        # Click the diagnostics block send button
>       page.locator('.js-send-diagnostic-btn').click()

tests\e2e\test_excel_upload_playwright_pytest.py:965: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\playwright\sync_api\_generated.py:15505: in click
    self._sync(
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\playwright\_impl\_locator.py:160: in click
    return await self._frame.click(self._selector, strict=True, **params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\playwright\_impl\_frame.py:521: in click
    await self._channel.send("click", self._timeout, locals_to_params(locals()))
C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\playwright\_impl\_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <playwright._impl._connection.Connection object at 0x0000025D04CD0550>
cb = <function Channel.send.<locals>.<lambda> at 0x0000025D0670B060>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: Locator.click: Error: strict mode violation: locator(".js-send-diagnostic-btn") resolved to 13 elements:
E               1) <button class="btn btn-primary js-send-diagnostic-btn">Send Diagnostic Information</button> aka get_by_role("button", name="Send Diagnostic Information")
E               2) <a class="btn btn-outline-primary js-send-diagnostic-btn" href="/review_staged/2051/id_2051_ts_20250718_175023.json">…</a> aka get_by_role("row", name="2051 Oil and Gas").get_by_role("link")
E               3) <a class="btn btn-outline-primary js-send-diagnostic-btn" href="/review_staged/2041/id_2041_ts_20250718_175006.json">…</a> aka get_by_role("row", name="2041 Landfill").get_by_role("link")
E               4) <a class="btn btn-outline-primary js-send-diagnostic-btn" href="/review_staged/2032/id_2032_ts_20250718_174949.json">…</a> aka get_by_role("row", name="2032 Landfill").get_by_role("link")
E               5) <a class="btn btn-outline-primary js-send-diagnostic-btn" href="/review_staged/2031/id_2031_ts_20250718_174933.json">…</a> aka get_by_role("row", name="2031 Landfill").get_by_role("link")
E               6) <a class="btn btn-outline-primary js-send-diagnostic-btn" href="/review_staged/2022/id_2022_ts_20250718_174916.json">…</a> aka get_by_role("row", name="2022 Generic").get_by_role("link")
E               7) <a class="btn btn-outline-primary js-send-diagnostic-btn" href="/review_staged/2021/id_2021_ts_20250718_174900.json">…</a> aka get_by_role("row", name="2021 Generic").get_by_role("link")
E               8) <a class="btn btn-outline-primary js-send-diagnostic-btn" href="/review_staged/2012/id_2012_ts_20250718_174843.json">…</a> aka get_by_role("row", name="2012 Energy").get_by_role("link")
E               9) <a class="btn btn-outline-primary js-send-diagnostic-btn" href="/review_staged/2011/id_2011_ts_20250718_174827.json">…</a> aka get_by_role("row", name="2011 Energy").get_by_role("link")
E               10) <a class="btn btn-outline-primary js-send-diagnostic-btn" href="/review_staged/2002/id_2002_ts_20250718_174758.json">…</a> aka get_by_role("row", name="2002 Dairy Digester").get_by_role("link")
E               ...
E           
E           Call log:
E             - waiting for locator(".js-send-diagnostic-btn")

C:\Users\tonyh\miniconda3\envs\mini_conda_01\Lib\site-packages\playwright\_impl\_connection.py:558: Error
---------------------------- Captured stdout call -----------------------------
[DIAGNOSTICS OVERLAY after load] [JS_DIAG] Page loaded (list_staged)

=========================== short test summary info ===========================
FAILED tests/e2e/test_excel_upload_playwright_pytest.py::test_list_staged_diagnostics_overlay[chromium]
====================== 1 failed, 104 deselected in 4.65s ======================
