+2025-07-09 17:42:50.790 | DEBUG    | arb.wsgi         | user:anonymous | 120   | wsgi.py              | Loading File: "wsgi.py". Full Path: "C:\tony_local\pycharm\feedback_portal\source\production\arb\wsgi.py"
+2025-07-09 17:42:50.791 | DEBUG    | arb.portal.startup.flask | user:anonymous | 77    | flask.py             | configure_flask_app() called
+2025-07-09 17:42:50.792 | DEBUG    | arb.portal.startup.flask | user:anonymous | 114   | flask.py             | Flask Jinja2 globals and logging initialized.
+2025-07-09 17:42:50.987 | INFO     | arb.portal.startup.db | user:anonymous | 79    | db.py                | Initializing database models.
+2025-07-09 17:42:50.987 | INFO     | arb.portal.startup.db | user:anonymous | 108   | db.py                | Creating all missing tables.
+2025-07-09 17:42:56.981 | DEBUG    | arb.portal.startup.db | user:anonymous | 110   | db.py                | Database schema created.
+2025-07-09 17:42:56.981 | INFO     | arb.portal.startup.db | user:anonymous | 133   | db.py                | Database initialized and tables ensured.
+2025-07-09 17:42:56.981 | INFO     | arb.portal.startup.db | user:anonymous | 57    | db.py                | Reflecting database metadata.
+2025-07-09 17:42:57.997 | DEBUG    | arb.portal.startup.db | user:anonymous | 59    | db.py                | Reflection complete.
+2025-07-09 17:42:58.896 | DEBUG    | arb.utils.sql_alchemy | user:anonymous | 174   | sql_alchemy.py       | calling get_sa_automap_types()
+2025-07-09 17:42:59.228 | WARNING  | arb.utils.sql_alchemy | user:anonymous | 213   | sql_alchemy.py       | origin is of type: Geometry that is not implemented in python.  Setting python type to None.
+2025-07-09 17:42:59.229 | WARNING  | arb.utils.sql_alchemy | user:anonymous | 214   | sql_alchemy.py       | 
+2025-07-09 17:42:59.229 | WARNING  | arb.utils.sql_alchemy | user:anonymous | 213   | sql_alchemy.py       | extent is of type: Geometry that is not implemented in python.  Setting python type to None.
+2025-07-09 17:42:59.229 | WARNING  | arb.utils.sql_alchemy | user:anonymous | 214   | sql_alchemy.py       | 
+2025-07-09 17:42:59.231 | WARNING  | arb.utils.sql_alchemy | user:anonymous | 213   | sql_alchemy.py       | footprint is of type: Geometry that is not implemented in python.  Setting python type to None.
+2025-07-09 17:42:59.231 | WARNING  | arb.utils.sql_alchemy | user:anonymous | 214   | sql_alchemy.py       | 
+2025-07-09 17:43:00.094 | WARNING  | arb.utils.sql_alchemy | user:anonymous | 213   | sql_alchemy.py       | geom is of type: Geometry that is not implemented in python.  Setting python type to None.
+2025-07-09 17:43:00.095 | WARNING  | arb.utils.sql_alchemy | user:anonymous | 214   | sql_alchemy.py       | 
+2025-07-09 17:43:01.345 | WARNING  | arb.utils.sql_alchemy | user:anonymous | 213   | sql_alchemy.py       | coordinates is of type: Geometry that is not implemented in python.  Setting python type to None.
+2025-07-09 17:43:01.345 | WARNING  | arb.utils.sql_alchemy | user:anonymous | 214   | sql_alchemy.py       | 
+2025-07-09 17:43:01.478 | WARNING  | arb.utils.sql_alchemy | user:anonymous | 213   | sql_alchemy.py       | geometry is of type: Geometry that is not implemented in python.  Setting python type to None.
+2025-07-09 17:43:01.478 | WARNING  | arb.utils.sql_alchemy | user:anonymous | 214   | sql_alchemy.py       | 
+2025-07-09 17:43:02.101 | DEBUG    | arb.utils.sql_alchemy | user:anonymous | 221   | sql_alchemy.py       | returning from get_sa_automap_types()
+2025-07-09 17:43:02.105 | DEBUG    | arb.portal.globals | user:anonymous | 118   | globals.py           | Database type mapping: Globals.db_column_types={'mitigation_type': {'id_type': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'description': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'plumes': {'id_plume': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'plume_name': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'plume_timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(), 'sqlalchemy_type': 'TIMESTAMP'}, 'scene_id': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'id_source': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'id_incidence': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'instrument': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'origin': {'python_type': None, 'database_type': Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), 'sqlalchemy_type': 'Geometry'}, 'extent': {'python_type': None, 'database_type': Geometry(geometry_type='POLYGON', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), 'sqlalchemy_type': 'Geometry'}, 'footprint': {'python_type': None, 'database_type': Geometry(geometry_type='POLYGON', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), 'sqlalchemy_type': 'Geometry'}, 'emission_rate': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'emission_rate_uncertainty': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'provider_sector': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'provider_status': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'provider_qa': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'provider_qa_comment': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'wind_speed': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'wind_direction': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'info_json': {'python_type': <class 'dict'>, 'database_type': JSONB(astext_type=Text()), 'sqlalchemy_type': 'JSONB'}, 'qa_comment': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'filepath': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'import_timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(), 'sqlalchemy_type': 'TIMESTAMP'}, 'plume_qa_flag_fk': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'display': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'auto_facility': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'auto_facility_type': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'hide_emission': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'hpep_flag': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'ok_to_send': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}}, 'incidences': {'id_incidence': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'description': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'incidence_status': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'incidence_status_explanation': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'notification_timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(), 'sqlalchemy_type': 'TIMESTAMP'}, 'reply_timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(), 'sqlalchemy_type': 'TIMESTAMP'}, 'inspection_timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(), 'sqlalchemy_type': 'TIMESTAMP'}, 'identified_component': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'identified_component_notes': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'emission_type_notes': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'emission_location': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'emission_location_notes': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'emission_cause': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'emission_cause_notes': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'mitigated_flag': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'mitigation_timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(), 'sqlalchemy_type': 'TIMESTAMP'}, 'operator_comment': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'internal_comment': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'end_timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(), 'sqlalchemy_type': 'TIMESTAMP'}, 'created_timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(), 'sqlalchemy_type': 'TIMESTAMP'}, 'created_by': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'misc_json': {'python_type': <class 'dict'>, 'database_type': JSON(astext_type=Text()), 'sqlalchemy_type': 'JSON'}, 'source_id': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'incidence_qa_flag_fk': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'inspection_flag_fk': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'emission_identified_flag_fk': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'emission_type_fk': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'mitigation_type_fk': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'is_open': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}}, 'emission_identified_flag': {'id_flag': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'description': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'emission_identified_flags': {'id_flag': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'description': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'air_district_contacts': {'id': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'dis': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=5), 'sqlalchemy_type': 'VARCHAR'}, 'name': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=100), 'sqlalchemy_type': 'VARCHAR'}, 'email': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=255), 'sqlalchemy_type': 'VARCHAR'}, 'created_at': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(), 'sqlalchemy_type': 'TIMESTAMP'}, 'updated_at': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(), 'sqlalchemy_type': 'TIMESTAMP'}}, 'operators': {'id_operator': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'operator_name': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'sector': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'operator_notes': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'uploaded_files': {'id_': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'path': {'python_type': <class 'str'>, 'database_type': TEXT(), 'sqlalchemy_type': 'TEXT'}, 'description': {'python_type': <class 'str'>, 'database_type': TEXT(), 'sqlalchemy_type': 'TEXT'}, 'status': {'python_type': <class 'str'>, 'database_type': TEXT(), 'sqlalchemy_type': 'TEXT'}, 'created_timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(timezone=True), 'sqlalchemy_type': 'TIMESTAMP'}, 'modified_timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(timezone=True), 'sqlalchemy_type': 'TIMESTAMP'}}, 'coabdis_geo83': {'gid': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'objectid': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'co_name': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=20), 'sqlalchemy_type': 'VARCHAR'}, 'co_num': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'basin_name': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=40), 'sqlalchemy_type': 'VARCHAR'}, 'basa_id': {'python_type': <class 'decimal.Decimal'>, 'database_type': NUMERIC(), 'sqlalchemy_type': 'NUMERIC'}, 'dis_name': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=30), 'sqlalchemy_type': 'VARCHAR'}, 'dist_type': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=11), 'sqlalchemy_type': 'VARCHAR'}, 'disa_id': {'python_type': <class 'decimal.Decimal'>, 'database_type': NUMERIC(), 'sqlalchemy_type': 'NUMERIC'}, 'island_nam': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=35), 'sqlalchemy_type': 'VARCHAR'}, 'island_id': {'python_type': <class 'decimal.Decimal'>, 'database_type': NUMERIC(), 'sqlalchemy_type': 'NUMERIC'}, 'bay_splint': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=35), 'sqlalchemy_type': 'VARCHAR'}, 'bay_id': {'python_type': <class 'decimal.Decimal'>, 'database_type': NUMERIC(), 'sqlalchemy_type': 'NUMERIC'}, 'coabdis_id': {'python_type': <class 'decimal.Decimal'>, 'database_type': NUMERIC(), 'sqlalchemy_type': 'NUMERIC'}, 'coabdis_ar': {'python_type': <class 'decimal.Decimal'>, 'database_type': NUMERIC(), 'sqlalchemy_type': 'NUMERIC'}, 'shape_leng': {'python_type': <class 'decimal.Decimal'>, 'database_type': NUMERIC(), 'sqlalchemy_type': 'NUMERIC'}, 'shape_area': {'python_type': <class 'decimal.Decimal'>, 'database_type': NUMERIC(), 'sqlalchemy_type': 'NUMERIC'}, 'ab': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=3), 'sqlalchemy_type': 'VARCHAR'}, 'dis': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=3), 'sqlalchemy_type': 'VARCHAR'}, 'coabdis': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=10), 'sqlalchemy_type': 'VARCHAR'}, 'geom': {'python_type': None, 'database_type': Geometry(geometry_type='MULTIPOLYGON', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), 'sqlalchemy_type': 'Geometry'}}, 'email_types': {'id_type': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'email_type': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'mitigation_types': {'id_type': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'description': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'portal_updates': {'id': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(timezone=True), 'sqlalchemy_type': 'TIMESTAMP'}, 'key': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=255), 'sqlalchemy_type': 'VARCHAR'}, 'old_value': {'python_type': <class 'str'>, 'database_type': TEXT(), 'sqlalchemy_type': 'TEXT'}, 'new_value': {'python_type': <class 'str'>, 'database_type': TEXT(), 'sqlalchemy_type': 'TEXT'}, 'user': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=255), 'sqlalchemy_type': 'VARCHAR'}, 'comments': {'python_type': <class 'str'>, 'database_type': TEXT(), 'sqlalchemy_type': 'TEXT'}, 'id_incidence': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}}, 'air_districts': {'dis': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=5), 'sqlalchemy_type': 'VARCHAR'}, 'disn': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=100), 'sqlalchemy_type': 'VARCHAR'}}, 'plume_qa_flag': {'id_flag': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'description': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'emission_type': {'id_type': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'description': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'contact_groups': {'id_contact_group': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'contact_group_name': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'id_operator': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'notes': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'contact_group_mapping': {'id_contact_group': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'id_contact': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'comment': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'operator_contacts': {'id_contact': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'name': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'email': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'phone': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'contact_notes': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'active': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}}, 'sources': {'id_source': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'description': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'location': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'facility_id_type': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'facility_id': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'infrastructure_links': {'python_type': <class 'dict'>, 'database_type': JSONB(astext_type=Text()), 'sqlalchemy_type': 'JSONB'}, 'coordinates': {'python_type': None, 'database_type': Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), 'sqlalchemy_type': 'Geometry'}, 'created_timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(), 'sqlalchemy_type': 'TIMESTAMP'}, 'created_by': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'sector': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'sector_ipcc': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'notes': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'id_contact_group': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'facility_name': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'scenes': {'id': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'scene_id': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'public': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'published_plume_count': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'timestamp': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(timezone=True), 'sqlalchemy_type': 'TIMESTAMP'}, 'created_scene': {'python_type': <class 'datetime.datetime'>, 'database_type': TIMESTAMP(timezone=True), 'sqlalchemy_type': 'TIMESTAMP'}, 'instrument': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'mission_phase': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'not_cloudy': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'cloud_cover_pct': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'azimuth': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'gsd_scene': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'light_haze_pct': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'off_nadir': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'pixel_resolution': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'sensitivity_mode': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'solar_zenith_angle': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'sun_azimuth': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'sun_elevation': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'plume_count': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'valid_plume_count': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'assessment_status': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'note': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'atmospheric_artifacts': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'geolocation_error': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'image_artifacts': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'low_snr': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'gsd': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'cm:gas': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'created_l2b': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'proj:epsg': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'cm:cmf_type': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'processing:level': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'processing:lineage': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'view:sun_elevation': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'processing:software': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'version': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'cm:elevation': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'cm:elevation_source': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'cm:water_vapor': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'cm:water_vapor_source': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'gsd_l2b': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'view:zenith': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'eo:cloud_cover': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}, 'geometry': {'python_type': None, 'database_type': Geometry(geometry_type='POLYGON', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), 'sqlalchemy_type': 'Geometry'}, 'proj:shape': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'cm:active_wavelengths': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'cm:elevation_units': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'cm:elevation_method': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}, 'area_sqkm': {'python_type': <class 'float'>, 'database_type': DOUBLE_PRECISION(precision=53), 'sqlalchemy_type': 'DOUBLE_PRECISION'}}, 'incidence_qa_flag': {'id_flag': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'description': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'emission_types': {'id_type': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'description': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'spatial_ref_sys': {'srid': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'auth_name': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=256), 'sqlalchemy_type': 'VARCHAR'}, 'auth_srid': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'srtext': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=2048), 'sqlalchemy_type': 'VARCHAR'}, 'proj4text': {'python_type': <class 'str'>, 'database_type': VARCHAR(length=2048), 'sqlalchemy_type': 'VARCHAR'}}, 'inspection_flag': {'id_flag': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'description': {'python_type': <class 'str'>, 'database_type': VARCHAR(), 'sqlalchemy_type': 'VARCHAR'}}, 'messages': {'id_message': {'python_type': <class 'int'>, 'database_type': INTEGER(), 'sqlalchemy_type': 'INTEGER'}, 'content': {'python_type': <class 'dict'>, 'database_type': JSON(astext_type=Text()), 'sqlalchemy_type': 'JSON'}}}
+2025-07-09 17:43:02.105 | DEBUG    | arb.portal.globals | user:anonymous | 82    | globals.py           | In load_drop_downs()
+2025-07-09 17:43:02.107 | DEBUG    | arb.portal.globals | user:anonymous | 86    | globals.py           | Globals.drop_downs={'venting_exclusion': [('Please Select', 'Please Select', {'disabled': True}), ('Yes', 'Yes'), ('No', 'No')], 'ogi_performed': [('Please Select', 'Please Select', {'disabled': True}), ('Yes', 'Yes'), ('No', 'No')], 'ogi_result': [('Please Select', 'Please Select', {'disabled': True}), ('Not applicable as OGI was not performed', 'Not applicable as OGI was not performed'), ('No source found', 'No source found'), ('Unintentional-leak', 'Unintentional-leak'), ('Unintentional-non-component', 'Unintentional-non-component'), ('Venting-construction/maintenance', 'Venting-construction/maintenance'), ('Venting-routine', 'Venting-routine')], 'method21_performed': [('Please Select', 'Please Select', {'disabled': True}), ('Yes', 'Yes'), ('No', 'No')], 'method21_result': [('Please Select', 'Please Select', {'disabled': True}), ('Not applicable as Method 21 was not performed', 'Not applicable as Method 21 was not performed'), ('No source found', 'No source found'), ('Unintentional-below leak threshold', 'Unintentional-below leak threshold'), ('Unintentional-leak', 'Unintentional-leak'), ('Unintentional-non-component', 'Unintentional-non-component'), ('Venting-construction/maintenance', 'Venting-construction/maintenance'), ('Venting-routine', 'Venting-routine')], 'equipment_at_source': [('Please Select', 'Please Select', {'disabled': True}), ('Centrifugal Natural Gas Compressor', 'Centrifugal Natural Gas Compressor'), ('Continuous High Bleed Natural Gas-actuated Pneumatic Device', 'Continuous High Bleed Natural Gas-actuated Pneumatic Device'), ('Continuous Low Bleed Natural Gas-actuated Pneumatic Device', 'Continuous Low Bleed Natural Gas-actuated Pneumatic Device'), ('Intermittent Bleed Natural Gas-actuated Pneumatic Device', 'Intermittent Bleed Natural Gas-actuated Pneumatic Device'), ('Natural Gas-actuated Pneumatic Pump', 'Natural Gas-actuated Pneumatic Pump'), ('Pressure Separator', 'Pressure Separator'), ('Reciprocating Natural Gas Compressor', 'Reciprocating Natural Gas Compressor'), ('Separator', 'Separator'), ('Tank', 'Tank'), ('Open Well Casing Vent', 'Open Well Casing Vent'), ('Piping', 'Piping'), ('Well', 'Well'), ('Other', 'Other')], 'component_at_source': [('Please Select', 'Please Select', {'disabled': True}), ('Valve', 'Valve'), ('Connector', 'Connector'), ('Flange', 'Flange'), ('Fitting - pressure meter/gauge', 'Fitting - pressure meter/gauge'), ('Fitting - not pressure meter/gauge', 'Fitting - not pressure meter/gauge'), ('Open-ended line', 'Open-ended line'), ('Plug', 'Plug'), ('Pressure relief device', 'Pressure relief device'), ('Stuffing box', 'Stuffing box'), ('Other', 'Other')], 'emission_identified_flag_fk': [('Please Select', 'Please Select', {'disabled': True}), ('Operator was aware of the leak prior to receiving the CARB plume notification', 'Operator was aware of the leak prior to receiving the CARB plume notification'), ('Operator detected a leak during follow-up monitoring after receipt of the CARB plume notification', 'Operator detected a leak during follow-up monitoring after receipt of the CARB plume notification'), ('No leak was detected', 'No leak was detected')], 'emission_type_fk': [('Please Select', 'Please Select', {'disabled': True}), ('Not applicable as no leak was detected', 'Not applicable as no leak was detected'), ('Operator was aware of the leak prior to receiving the notification, and/or repairs were in progress on the date of the plume observation', 'Operator was aware of the leak prior to receiving the notification, and/or repairs were in progress on the date of the plume observation'), ('An unintentional leak  (i.e., the operator was not aware of, and could be repaired if discovered)', 'An unintentional leak  (i.e., the operator was not aware of, and could be repaired if discovered)'), ('An intentional or allowable vent (i.e., the operator was aware of, and/or would not repair)', 'An intentional or allowable vent (i.e., the operator was aware of, and/or would not repair)'), ('Due to a temporary activity (i.e., would be resolved without corrective action when the activity is complete)', 'Due to a temporary activity (i.e., would be resolved without corrective action when the activity is complete)')], 'emission_location': [('Please Select', 'Please Select', {'disabled': True}), ('Not applicable as no leak was detected', 'Not applicable as no leak was detected'), ('Gas Collection System Component (e.g., blower, well, valve, port)', 'Gas Collection System Component (e.g., blower, well, valve, port)'), ('Gas Control Device/Control System Component', 'Gas Control Device/Control System Component'), ('Landfill Surface: Daily Cover', 'Landfill Surface: Daily Cover'), ('Landfill Surface: Final Cover', 'Landfill Surface: Final Cover'), ('Landfill Surface: Intermediate Cover', 'Landfill Surface: Intermediate Cover'), ('Leachate Management System', 'Leachate Management System'), ('Working Face (area where active filling was being conducted at the time of detection)', 'Working Face (area where active filling was being conducted at the time of detection)')], 'emission_cause': [('Please Select', 'Please Select', {'disabled': True}), ('Not applicable as no leak was detected', 'Not applicable as no leak was detected'), ('Collection system downtime', 'Collection system downtime'), ('Construction - New Well Installation', 'Construction - New Well Installation'), ('Construction - Well Raising or Horizontal Extension', 'Construction - Well Raising or Horizontal Extension'), ('Cover integrity', 'Cover integrity'), ('Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)', 'Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)'), ('Cracked/Broken Seal', 'Cracked/Broken Seal'), ('Damaged component', 'Damaged component'), ('Insufficient vacuum', 'Insufficient vacuum'), ('Offline Gas Collection Well(s)', 'Offline Gas Collection Well(s)'), ('Other', 'Other'), ('Uncontrolled Area (no gas collection infrastructure)', 'Uncontrolled Area (no gas collection infrastructure)')], 'emission_cause_secondary': [('Please Select', 'Please Select', {'disabled': True}), ('Not applicable as no leak was detected', 'Not applicable as no leak was detected'), ('Not applicable as no additional leak cause suspected', 'Not applicable as no additional leak cause suspected'), ('Collection system downtime', 'Collection system downtime'), ('Construction - New Well Installation', 'Construction - New Well Installation'), ('Construction - Well Raising or Horizontal Extension', 'Construction - Well Raising or Horizontal Extension'), ('Cover integrity', 'Cover integrity'), ('Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)', 'Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)'), ('Cracked/Broken Seal', 'Cracked/Broken Seal'), ('Damaged component', 'Damaged component'), ('Insufficient vacuum', 'Insufficient vacuum'), ('Offline Gas Collection Well(s)', 'Offline Gas Collection Well(s)'), ('Other', 'Other'), ('Uncontrolled Area (no gas collection infrastructure)', 'Uncontrolled Area (no gas collection infrastructure)')], 'emission_cause_tertiary': [('Please Select', 'Please Select', {'disabled': True}), ('Not applicable as no leak was detected', 'Not applicable as no leak was detected'), ('Not applicable as no additional leak cause suspected', 'Not applicable as no additional leak cause suspected'), ('Collection system downtime', 'Collection system downtime'), ('Construction - New Well Installation', 'Construction - New Well Installation'), ('Construction - Well Raising or Horizontal Extension', 'Construction - Well Raising or Horizontal Extension'), ('Cover integrity', 'Cover integrity'), ('Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)', 'Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)'), ('Cracked/Broken Seal', 'Cracked/Broken Seal'), ('Damaged component', 'Damaged component'), ('Insufficient vacuum', 'Insufficient vacuum'), ('Offline Gas Collection Well(s)', 'Offline Gas Collection Well(s)'), ('Other', 'Other'), ('Uncontrolled Area (no gas collection infrastructure)', 'Uncontrolled Area (no gas collection infrastructure)')], 'included_in_last_lmr': [('Please Select', 'Please Select', {'disabled': True}), ('Yes', 'Yes'), ('No', 'No')], 'planned_for_next_lmr': [('Please Select', 'Please Select', {'disabled': True}), ('Yes', 'Yes'), ('No', 'No')]}
+2025-07-09 17:43:02.107 | DEBUG    | arb.portal.globals | user:anonymous | 87    | globals.py           | Globals.drop_downs_contingent={'emission_cause_contingent_on_emission_location': {'Gas Collection System Component (e.g., blower, well, valve, port)': ['Construction - New Well Installation', 'Construction - Well Raising or Horizontal Extension', 'Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)', 'Damaged component', 'Insufficient vacuum', 'Offline Gas Collection Well(s)', 'Other'], 'Gas Control Device/Control System Component': ['Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)', 'Damaged component', 'Other'], 'Landfill Surface: Daily Cover': ['Collection system downtime', 'Construction - New Well Installation', 'Construction - Well Raising or Horizontal Extension', 'Cover integrity', 'Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)', 'Cracked/Broken Seal', 'Damaged component', 'Insufficient vacuum', 'Offline Gas Collection Well(s)', 'Other', 'Uncontrolled Area (no gas collection infrastructure)'], 'Landfill Surface: Intermediate Cover': ['Collection system downtime', 'Construction - New Well Installation', 'Cover integrity', 'Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)', 'Cracked/Broken Seal', 'Damaged component', 'Insufficient vacuum', 'Offline Gas Collection Well(s)', 'Other', 'Uncontrolled Area (no gas collection infrastructure)'], 'Landfill Surface: Final Cover': ['Collection system downtime', 'Construction - New Well Installation', 'Construction - Well Raising or Horizontal Extension', 'Cover integrity', 'Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)', 'Cracked/Broken Seal', 'Damaged component', 'Insufficient vacuum', 'Offline Gas Collection Well(s)', 'Other', 'Uncontrolled Area (no gas collection infrastructure)'], 'Leachate Management System': ['Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)', 'Damaged component', 'Offline Gas Collection Well(s)', 'Other'], 'Working Face (area where active filling was being conducted at the time of detection)': ['Construction - New Well Installation', 'Construction - Well Raising or Horizontal Extension', 'Cover-related Construction (Excavation/ Exposed Operations/ Re-grading)', 'Offline Gas Collection Well(s)', 'Other', 'Uncontrolled Area (no gas collection infrastructure)']}}
+2025-07-09 17:43:02.260 | INFO     | werkzeug         | user:anonymous | 97    | _internal.py         | WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.
 * Running on http://127.0.0.1:5000
+2025-07-09 17:43:02.261 | INFO     | werkzeug         | user:anonymous | 97    | _internal.py         | Press CTRL+C to quit
+2025-07-09 17:43:07.372 | INFO     | arb.utils.sql_alchemy | user:anonymous | 395   | sql_alchemy.py       | type(table)=<class 'sqlalchemy.orm.decl_api.DeclarativeMeta'>
+2025-07-09 17:43:07.620 | DEBUG    | arb.utils.sql_alchemy | user:anonymous | 403   | sql_alchemy.py       | Query result: type(rows)=<class 'list'>
+2025-07-09 17:43:07.755 | INFO     | werkzeug         | user:anonymous | 97    | _internal.py         | 127.0.0.1 - - [09/Jul/2025 17:43:07] "GET / HTTP/1.1" 200 -
+2025-07-09 17:43:07.795 | INFO     | werkzeug         | user:anonymous | 97    | _internal.py         | 127.0.0.1 - - [09/Jul/2025 17:43:07] "GET /static/js/delete_confirmation.js HTTP/1.1" 304 -
+2025-07-09 17:43:07.795 | INFO     | werkzeug         | user:anonymous | 97    | _internal.py         | 127.0.0.1 - - [09/Jul/2025 17:43:07] "GET /static/images/carb_logo_01.jpg HTTP/1.1" 304 -
+2025-07-09 17:43:07.802 | INFO     | werkzeug         | user:anonymous | 97    | _internal.py         | 127.0.0.1 - - [09/Jul/2025 17:43:07] "GET /static/css/portal_styles_01.css HTTP/1.1" 304 -
+2025-07-09 17:43:07.813 | INFO     | werkzeug         | user:anonymous | 97    | _internal.py         | 127.0.0.1 - - [09/Jul/2025 17:43:07] "GET /static/images/clipboard_01.jpeg HTTP/1.1" 304 -
+2025-07-09 17:43:09.720 | INFO     | arb.portal.routes | user:anonymous | 1032  | routes.py            | create_sqlite_snapshot() called
+2025-07-09 17:43:09.720 | INFO     | arb.portal.routes | user:anonymous | 1037  | routes.py            | Creating snapshot from existing engine
+2025-07-09 17:43:09.721 | INFO     | arb.util.db_snapshot | user:anonymous | 151   | db_snapshot.py       | Creating SQLite snapshot from existing engine
+2025-07-09 17:43:09.722 | INFO     | arb.util.db_snapshot | user:anonymous | 152   | db_snapshot.py       | Output path: C:\tony_local\pycharm\feedback_portal\source\production\arb\database_snapshots\arb_snapshot_20250709_174309.sqlite
+2025-07-09 17:43:10.680 | INFO     | arb.util.db_snapshot | user:anonymous | 44    | db_snapshot.py       | Cleaning metadata for SQLite compatibility
+2025-07-09 17:43:10.681 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: spatial_ref_sys
+2025-07-09 17:43:10.681 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: srid (type: INTEGER)
+2025-07-09 17:43:10.681 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: auth_name (type: VARCHAR(256))
+2025-07-09 17:43:10.682 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: auth_srid (type: INTEGER)
+2025-07-09 17:43:10.682 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: srtext (type: VARCHAR(2048))
+2025-07-09 17:43:10.683 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: proj4text (type: VARCHAR(2048))
+2025-07-09 17:43:10.683 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: coabdis_geo83
+2025-07-09 17:43:10.684 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: gid (type: INTEGER)
+2025-07-09 17:43:10.684 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B53CAD0>, for_update=False)
+2025-07-09 17:43:10.684 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('coabdis_geo83_gid_seq'::regclass)
+2025-07-09 17:43:10.684 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column gid (server_default)
+2025-07-09 17:43:10.684 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: objectid (type: INTEGER)
+2025-07-09 17:43:10.685 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: co_name (type: VARCHAR(20))
+2025-07-09 17:43:10.685 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: co_num (type: INTEGER)
+2025-07-09 17:43:10.685 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: basin_name (type: VARCHAR(40))
+2025-07-09 17:43:10.685 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: basa_id (type: NUMERIC)
+2025-07-09 17:43:10.686 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: dis_name (type: VARCHAR(30))
+2025-07-09 17:43:10.686 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: dist_type (type: VARCHAR(11))
+2025-07-09 17:43:10.686 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: disa_id (type: NUMERIC)
+2025-07-09 17:43:10.686 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: island_nam (type: VARCHAR(35))
+2025-07-09 17:43:10.687 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: island_id (type: NUMERIC)
+2025-07-09 17:43:10.687 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: bay_splint (type: VARCHAR(35))
+2025-07-09 17:43:10.687 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: bay_id (type: NUMERIC)
+2025-07-09 17:43:10.687 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: coabdis_id (type: NUMERIC)
+2025-07-09 17:43:10.687 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: coabdis_ar (type: NUMERIC)
+2025-07-09 17:43:10.687 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: shape_leng (type: NUMERIC)
+2025-07-09 17:43:10.688 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: shape_area (type: NUMERIC)
+2025-07-09 17:43:10.688 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: ab (type: VARCHAR(3))
+2025-07-09 17:43:10.688 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: dis (type: VARCHAR(3))
+2025-07-09 17:43:10.689 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: coabdis (type: VARCHAR(10))
+2025-07-09 17:43:10.689 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: geom (type: geometry(MULTIPOLYGON,4326))
+2025-07-09 17:43:10.689 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: emission_identified_flag
+2025-07-09 17:43:10.689 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_flag (type: INTEGER)
+2025-07-09 17:43:10.689 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: description (type: VARCHAR)
+2025-07-09 17:43:10.690 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: emission_type
+2025-07-09 17:43:10.690 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_type (type: INTEGER)
+2025-07-09 17:43:10.690 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: description (type: VARCHAR)
+2025-07-09 17:43:10.690 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: mitigation_type
+2025-07-09 17:43:10.690 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_type (type: INTEGER)
+2025-07-09 17:43:10.690 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: description (type: VARCHAR)
+2025-07-09 17:43:10.691 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: uploaded_files
+2025-07-09 17:43:10.691 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_ (type: INTEGER)
+2025-07-09 17:43:10.691 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B558550>, for_update=False)
+2025-07-09 17:43:10.691 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('uploaded_files_id__seq'::regclass)
+2025-07-09 17:43:10.692 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id_ (server_default)
+2025-07-09 17:43:10.692 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: path (type: TEXT)
+2025-07-09 17:43:10.692 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: description (type: TEXT)
+2025-07-09 17:43:10.692 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: status (type: TEXT)
+2025-07-09 17:43:10.692 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: created_timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.693 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B558E90>, for_update=False)
+2025-07-09 17:43:10.693 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: now()
+2025-07-09 17:43:10.693 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: modified_timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.693 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B542E90>, for_update=False)
+2025-07-09 17:43:10.693 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: now()
+2025-07-09 17:43:10.693 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: staging_operators
+2025-07-09 17:43:10.693 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: operator_name (type: TEXT)
+2025-07-09 17:43:10.694 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: sector (type: TEXT)
+2025-07-09 17:43:10.694 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: staging_contact_groups
+2025-07-09 17:43:10.695 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: contact_group_name (type: TEXT)
+2025-07-09 17:43:10.695 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: operator_name (type: TEXT)
+2025-07-09 17:43:10.695 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: notes (type: TEXT)
+2025-07-09 17:43:10.695 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: staging_contacts
+2025-07-09 17:43:10.695 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: name (type: TEXT)
+2025-07-09 17:43:10.696 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: email (type: TEXT)
+2025-07-09 17:43:10.696 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: phone (type: TEXT)
+2025-07-09 17:43:10.696 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: active (type: BIGINT)
+2025-07-09 17:43:10.696 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: email_types
+2025-07-09 17:43:10.696 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_type (type: INTEGER)
+2025-07-09 17:43:10.697 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B55A810>, for_update=False)
+2025-07-09 17:43:10.697 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('email_types_id_type_seq'::regclass)
+2025-07-09 17:43:10.697 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id_type (server_default)
+2025-07-09 17:43:10.697 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: email_type (type: VARCHAR)
+2025-07-09 17:43:10.697 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: plume_updates
+2025-07-09 17:43:10.697 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.698 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: plume_name (type: TEXT)
+2025-07-09 17:43:10.698 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: column (type: TEXT)
+2025-07-09 17:43:10.698 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: prev (type: TEXT)
+2025-07-09 17:43:10.698 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: cur (type: TEXT)
+2025-07-09 17:43:10.698 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: emission_identified_flags
+2025-07-09 17:43:10.698 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_flag (type: INTEGER)
+2025-07-09 17:43:10.699 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B55BC50>, for_update=False)
+2025-07-09 17:43:10.699 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('emission_identified_flags_id_flag_seq'::regclass)
+2025-07-09 17:43:10.699 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id_flag (server_default)
+2025-07-09 17:43:10.699 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: description (type: VARCHAR)
+2025-07-09 17:43:10.699 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: emission_types
+2025-07-09 17:43:10.700 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_type (type: INTEGER)
+2025-07-09 17:43:10.700 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B5985D0>, for_update=False)
+2025-07-09 17:43:10.700 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('emission_types_id_type_seq'::regclass)
+2025-07-09 17:43:10.700 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id_type (server_default)
+2025-07-09 17:43:10.700 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: description (type: VARCHAR)
+2025-07-09 17:43:10.700 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: mitigation_types
+2025-07-09 17:43:10.700 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_type (type: INTEGER)
+2025-07-09 17:43:10.701 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B598E10>, for_update=False)
+2025-07-09 17:43:10.701 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('mitigation_types_id_type_seq'::regclass)
+2025-07-09 17:43:10.701 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id_type (server_default)
+2025-07-09 17:43:10.701 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: description (type: VARCHAR)
+2025-07-09 17:43:10.701 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: air_districts
+2025-07-09 17:43:10.701 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: dis (type: VARCHAR(5))
+2025-07-09 17:43:10.702 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: disn (type: VARCHAR(100))
+2025-07-09 17:43:10.702 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: air_district_contacts
+2025-07-09 17:43:10.702 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id (type: INTEGER)
+2025-07-09 17:43:10.702 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B599D10>, for_update=False)
+2025-07-09 17:43:10.702 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('air_district_contacts_id_seq'::regclass)
+2025-07-09 17:43:10.703 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id (server_default)
+2025-07-09 17:43:10.703 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: dis (type: VARCHAR(5))
+2025-07-09 17:43:10.703 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: name (type: VARCHAR(100))
+2025-07-09 17:43:10.703 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: email (type: VARCHAR(255))
+2025-07-09 17:43:10.703 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: created_at (type: TIMESTAMP)
+2025-07-09 17:43:10.703 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B59A350>, for_update=False)
+2025-07-09 17:43:10.703 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: now()
+2025-07-09 17:43:10.704 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: updated_at (type: TIMESTAMP)
+2025-07-09 17:43:10.704 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B59A550>, for_update=False)
+2025-07-09 17:43:10.704 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: now()
+2025-07-09 17:43:10.704 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: portal_updates
+2025-07-09 17:43:10.704 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id (type: INTEGER)
+2025-07-09 17:43:10.704 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B59AD10>, for_update=False)
+2025-07-09 17:43:10.705 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('portal_updates_id_seq'::regclass)
+2025-07-09 17:43:10.705 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id (server_default)
+2025-07-09 17:43:10.705 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.705 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B59AED0>, for_update=False)
+2025-07-09 17:43:10.705 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: now()
+2025-07-09 17:43:10.705 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: key (type: VARCHAR(255))
+2025-07-09 17:43:10.706 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: old_value (type: TEXT)
+2025-07-09 17:43:10.706 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: new_value (type: TEXT)
+2025-07-09 17:43:10.706 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: user (type: VARCHAR(255))
+2025-07-09 17:43:10.706 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: comments (type: TEXT)
+2025-07-09 17:43:10.706 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_incidence (type: INTEGER)
+2025-07-09 17:43:10.707 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: operators
+2025-07-09 17:43:10.707 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_operator (type: INTEGER)
+2025-07-09 17:43:10.707 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B59BED0>, for_update=False)
+2025-07-09 17:43:10.707 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('operators_id_operator_seq'::regclass)
+2025-07-09 17:43:10.707 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id_operator (server_default)
+2025-07-09 17:43:10.707 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: operator_name (type: VARCHAR)
+2025-07-09 17:43:10.707 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: sector (type: VARCHAR)
+2025-07-09 17:43:10.708 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: operator_notes (type: VARCHAR)
+2025-07-09 17:43:10.708 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: contact_groups
+2025-07-09 17:43:10.708 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_contact_group (type: INTEGER)
+2025-07-09 17:43:10.708 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B5BC9D0>, for_update=False)
+2025-07-09 17:43:10.708 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('contact_groups_id_contact_group_seq'::regclass)
+2025-07-09 17:43:10.708 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id_contact_group (server_default)
+2025-07-09 17:43:10.708 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: contact_group_name (type: VARCHAR)
+2025-07-09 17:43:10.709 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_operator (type: INTEGER)
+2025-07-09 17:43:10.709 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: notes (type: VARCHAR)
+2025-07-09 17:43:10.709 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: contact_group_mapping
+2025-07-09 17:43:10.709 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_contact_group (type: INTEGER)
+2025-07-09 17:43:10.709 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_contact (type: INTEGER)
+2025-07-09 17:43:10.710 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: comment (type: VARCHAR)
+2025-07-09 17:43:10.710 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: operator_contacts
+2025-07-09 17:43:10.710 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_contact (type: INTEGER)
+2025-07-09 17:43:10.710 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B5BE850>, for_update=False)
+2025-07-09 17:43:10.710 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('operator_contacts_id_contact_seq'::regclass)
+2025-07-09 17:43:10.710 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id_contact (server_default)
+2025-07-09 17:43:10.710 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: name (type: VARCHAR)
+2025-07-09 17:43:10.711 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: email (type: VARCHAR)
+2025-07-09 17:43:10.711 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: phone (type: VARCHAR)
+2025-07-09 17:43:10.711 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: contact_notes (type: VARCHAR)
+2025-07-09 17:43:10.711 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: active (type: INTEGER)
+2025-07-09 17:43:10.711 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: scenes
+2025-07-09 17:43:10.712 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id (type: VARCHAR)
+2025-07-09 17:43:10.712 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: scene_id (type: VARCHAR)
+2025-07-09 17:43:10.712 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: public (type: INTEGER)
+2025-07-09 17:43:10.713 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: published_plume_count (type: INTEGER)
+2025-07-09 17:43:10.713 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.713 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: created_scene (type: TIMESTAMP)
+2025-07-09 17:43:10.713 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: instrument (type: VARCHAR)
+2025-07-09 17:43:10.714 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: mission_phase (type: VARCHAR)
+2025-07-09 17:43:10.714 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: not_cloudy (type: INTEGER)
+2025-07-09 17:43:10.714 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: cloud_cover_pct (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.714 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: azimuth (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.714 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: gsd_scene (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.714 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: light_haze_pct (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.715 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: off_nadir (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.715 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: pixel_resolution (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.715 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: sensitivity_mode (type: VARCHAR)
+2025-07-09 17:43:10.715 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: solar_zenith_angle (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.716 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: sun_azimuth (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.716 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: sun_elevation (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.716 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: plume_count (type: INTEGER)
+2025-07-09 17:43:10.716 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: valid_plume_count (type: INTEGER)
+2025-07-09 17:43:10.716 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: assessment_status (type: VARCHAR)
+2025-07-09 17:43:10.717 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: note (type: VARCHAR)
+2025-07-09 17:43:10.717 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: atmospheric_artifacts (type: VARCHAR)
+2025-07-09 17:43:10.717 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: geolocation_error (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.717 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: image_artifacts (type: VARCHAR)
+2025-07-09 17:43:10.717 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: low_snr (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.717 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: gsd (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.718 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: cm:gas (type: VARCHAR)
+2025-07-09 17:43:10.718 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: created_l2b (type: VARCHAR)
+2025-07-09 17:43:10.718 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: proj:epsg (type: VARCHAR)
+2025-07-09 17:43:10.718 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: cm:cmf_type (type: VARCHAR)
+2025-07-09 17:43:10.718 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: processing:level (type: VARCHAR)
+2025-07-09 17:43:10.718 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: processing:lineage (type: VARCHAR)
+2025-07-09 17:43:10.719 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: view:sun_elevation (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.719 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: processing:software (type: VARCHAR)
+2025-07-09 17:43:10.719 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: version (type: VARCHAR)
+2025-07-09 17:43:10.719 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: cm:elevation (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.719 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: cm:elevation_source (type: VARCHAR)
+2025-07-09 17:43:10.719 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: cm:water_vapor (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.720 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: cm:water_vapor_source (type: VARCHAR)
+2025-07-09 17:43:10.720 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: gsd_l2b (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.720 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: view:zenith (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.720 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: eo:cloud_cover (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.720 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: geometry (type: geometry(POLYGON,4326))
+2025-07-09 17:43:10.720 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: proj:shape (type: VARCHAR)
+2025-07-09 17:43:10.721 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: cm:active_wavelengths (type: VARCHAR)
+2025-07-09 17:43:10.721 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: cm:elevation_units (type: VARCHAR)
+2025-07-09 17:43:10.721 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: cm:elevation_method (type: VARCHAR)
+2025-07-09 17:43:10.721 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: area_sqkm (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.722 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: incidences
+2025-07-09 17:43:10.722 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_incidence (type: INTEGER)
+2025-07-09 17:43:10.722 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B5D4B10>, for_update=False)
+2025-07-09 17:43:10.722 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('incidences_id_incidence_seq'::regclass)
+2025-07-09 17:43:10.722 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id_incidence (server_default)
+2025-07-09 17:43:10.722 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: description (type: VARCHAR)
+2025-07-09 17:43:10.722 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: incidence_status (type: VARCHAR)
+2025-07-09 17:43:10.723 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: incidence_status_explanation (type: VARCHAR)
+2025-07-09 17:43:10.723 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: notification_timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.723 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: reply_timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.723 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: inspection_timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.723 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: identified_component (type: VARCHAR)
+2025-07-09 17:43:10.723 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: identified_component_notes (type: VARCHAR)
+2025-07-09 17:43:10.724 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: emission_type_notes (type: VARCHAR)
+2025-07-09 17:43:10.724 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: emission_location (type: VARCHAR)
+2025-07-09 17:43:10.724 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: emission_location_notes (type: VARCHAR)
+2025-07-09 17:43:10.724 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: emission_cause (type: VARCHAR)
+2025-07-09 17:43:10.724 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: emission_cause_notes (type: VARCHAR)
+2025-07-09 17:43:10.724 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: mitigated_flag (type: INTEGER)
+2025-07-09 17:43:10.724 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: mitigation_timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.726 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: operator_comment (type: VARCHAR)
+2025-07-09 17:43:10.726 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: internal_comment (type: VARCHAR)
+2025-07-09 17:43:10.726 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: end_timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.726 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: created_timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.726 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B5D6510>, for_update=False)
+2025-07-09 17:43:10.726 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: CURRENT_TIMESTAMP(0)
+2025-07-09 17:43:10.726 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: created_by (type: VARCHAR)
+2025-07-09 17:43:10.727 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: misc_json (type: JSON)
+2025-07-09 17:43:10.727 | INFO     | arb.util.db_snapshot | user:anonymous | 87    | db_snapshot.py       |   Converting JSON to TEXT for column misc_json
+2025-07-09 17:43:10.727 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: source_id (type: INTEGER)
+2025-07-09 17:43:10.727 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: incidence_qa_flag_fk (type: INTEGER)
+2025-07-09 17:43:10.727 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: inspection_flag_fk (type: INTEGER)
+2025-07-09 17:43:10.727 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: emission_identified_flag_fk (type: INTEGER)
+2025-07-09 17:43:10.728 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: emission_type_fk (type: INTEGER)
+2025-07-09 17:43:10.728 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: mitigation_type_fk (type: INTEGER)
+2025-07-09 17:43:10.728 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: is_open (type: INTEGER)
+2025-07-09 17:43:10.728 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: incidence_qa_flag
+2025-07-09 17:43:10.729 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_flag (type: INTEGER)
+2025-07-09 17:43:10.729 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: description (type: VARCHAR)
+2025-07-09 17:43:10.729 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: inspection_flag
+2025-07-09 17:43:10.729 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_flag (type: INTEGER)
+2025-07-09 17:43:10.729 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: description (type: VARCHAR)
+2025-07-09 17:43:10.730 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: sources
+2025-07-09 17:43:10.730 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_source (type: INTEGER)
+2025-07-09 17:43:10.730 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B5E61D0>, for_update=False)
+2025-07-09 17:43:10.730 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('sources_id_source_seq'::regclass)
+2025-07-09 17:43:10.730 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id_source (server_default)
+2025-07-09 17:43:10.730 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: description (type: VARCHAR)
+2025-07-09 17:43:10.730 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: location (type: VARCHAR)
+2025-07-09 17:43:10.730 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: facility_id_type (type: VARCHAR)
+2025-07-09 17:43:10.730 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: facility_id (type: VARCHAR)
+2025-07-09 17:43:10.731 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: infrastructure_links (type: JSONB)
+2025-07-09 17:43:10.731 | INFO     | arb.util.db_snapshot | user:anonymous | 87    | db_snapshot.py       |   Converting JSONB to TEXT for column infrastructure_links
+2025-07-09 17:43:10.731 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: coordinates (type: geometry(POINT,4326))
+2025-07-09 17:43:10.731 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: created_timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.731 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B5E7150>, for_update=False)
+2025-07-09 17:43:10.731 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: CURRENT_TIMESTAMP(0)
+2025-07-09 17:43:10.731 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: created_by (type: VARCHAR)
+2025-07-09 17:43:10.731 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: sector (type: VARCHAR)
+2025-07-09 17:43:10.732 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: sector_ipcc (type: VARCHAR)
+2025-07-09 17:43:10.732 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: notes (type: VARCHAR)
+2025-07-09 17:43:10.732 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_contact_group (type: INTEGER)
+2025-07-09 17:43:10.732 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: facility_name (type: VARCHAR)
+2025-07-09 17:43:10.732 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: plumes
+2025-07-09 17:43:10.732 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_plume (type: INTEGER)
+2025-07-09 17:43:10.732 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B5F8390>, for_update=False)
+2025-07-09 17:43:10.732 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('plumes_id_plume_seq'::regclass)
+2025-07-09 17:43:10.732 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id_plume (server_default)
+2025-07-09 17:43:10.732 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: plume_name (type: VARCHAR)
+2025-07-09 17:43:10.732 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: plume_timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.733 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: scene_id (type: VARCHAR)
+2025-07-09 17:43:10.733 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_source (type: INTEGER)
+2025-07-09 17:43:10.733 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_incidence (type: INTEGER)
+2025-07-09 17:43:10.733 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: instrument (type: VARCHAR)
+2025-07-09 17:43:10.733 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: origin (type: geometry(POINT,4326))
+2025-07-09 17:43:10.733 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: extent (type: geometry(POLYGON,4326))
+2025-07-09 17:43:10.733 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: footprint (type: geometry(POLYGON,4326))
+2025-07-09 17:43:10.733 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: emission_rate (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.733 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: emission_rate_uncertainty (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.733 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: provider_sector (type: VARCHAR)
+2025-07-09 17:43:10.733 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: provider_status (type: VARCHAR)
+2025-07-09 17:43:10.733 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: provider_qa (type: VARCHAR)
+2025-07-09 17:43:10.734 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: provider_qa_comment (type: VARCHAR)
+2025-07-09 17:43:10.734 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: wind_speed (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.734 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: wind_direction (type: DOUBLE PRECISION)
+2025-07-09 17:43:10.734 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: info_json (type: JSONB)
+2025-07-09 17:43:10.734 | INFO     | arb.util.db_snapshot | user:anonymous | 87    | db_snapshot.py       |   Converting JSONB to TEXT for column info_json
+2025-07-09 17:43:10.734 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: qa_comment (type: VARCHAR)
+2025-07-09 17:43:10.734 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: filepath (type: VARCHAR)
+2025-07-09 17:43:10.734 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: import_timestamp (type: TIMESTAMP)
+2025-07-09 17:43:10.734 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B5FA450>, for_update=False)
+2025-07-09 17:43:10.734 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: CURRENT_TIMESTAMP(0)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: plume_qa_flag_fk (type: INTEGER)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: display (type: INTEGER)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B5FA910>, for_update=False)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: 1
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: auto_facility (type: VARCHAR)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: auto_facility_type (type: VARCHAR)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: hide_emission (type: VARCHAR)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: hpep_flag (type: INTEGER)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B5FAE50>, for_update=False)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: 0
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: ok_to_send (type: INTEGER)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B5FB050>, for_update=False)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: 0
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: plume_qa_flag
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_flag (type: INTEGER)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: description (type: VARCHAR)
+2025-07-09 17:43:10.735 | INFO     | arb.util.db_snapshot | user:anonymous | 47    | db_snapshot.py       | Cleaning table: messages
+2025-07-09 17:43:10.736 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: id_message (type: INTEGER)
+2025-07-09 17:43:10.736 | INFO     | arb.util.db_snapshot | user:anonymous | 58    | db_snapshot.py       |     server_default: DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x0000023A8B609450>, for_update=False)
+2025-07-09 17:43:10.736 | INFO     | arb.util.db_snapshot | user:anonymous | 64    | db_snapshot.py       |     Actual SQL: nextval('messages_id_message_seq'::regclass)
+2025-07-09 17:43:10.736 | INFO     | arb.util.db_snapshot | user:anonymous | 66    | db_snapshot.py       |     Removing PostgreSQL sequence default from column id_message (server_default)
+2025-07-09 17:43:10.736 | INFO     | arb.util.db_snapshot | user:anonymous | 50    | db_snapshot.py       |   Processing column: content (type: JSON)
+2025-07-09 17:43:10.736 | INFO     | arb.util.db_snapshot | user:anonymous | 87    | db_snapshot.py       |   Converting JSON to TEXT for column content
+2025-07-09 17:43:10.766 | ERROR    | arb.util.db_snapshot | user:anonymous | 177   | db_snapshot.py       | Database error creating snapshot: (sqlite3.OperationalError) no such function: RecoverGeometryColumn
[SQL: SELECT RecoverGeometryColumn(?, ?, ?, ?, ?) AS "RecoverGeometryColumn_1"]
[parameters: ('coabdis_geo83', 'geom', 4326, 'MULTIPOLYGON', 'XY')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
+2025-07-09 17:43:10.783 | INFO     | werkzeug         | user:anonymous | 97    | _internal.py         | 127.0.0.1 - - [09/Jul/2025 17:43:10] "GET /create_sqlite_snapshot HTTP/1.1" 200 -
+2025-07-09 17:43:10.812 | INFO     | werkzeug         | user:anonymous | 97    | _internal.py         | 127.0.0.1 - - [09/Jul/2025 17:43:10] "GET /static/css/portal_styles_01.css HTTP/1.1" 304 -
+2025-07-09 17:43:10.818 | INFO     | werkzeug         | user:anonymous | 97    | _internal.py         | 127.0.0.1 - - [09/Jul/2025 17:43:10] "GET /static/images/carb_logo_01.jpg HTTP/1.1" 304 -
+2025-07-09 17:43:10.822 | INFO     | werkzeug         | user:anonymous | 97    | _internal.py         | 127.0.0.1 - - [09/Jul/2025 17:43:10] "GET /static/js/delete_confirmation.js HTTP/1.1" 304 -
