============================= test session starts ==============================
platform linux -- Python 3.11.13, pytest-7.4.4, pluggy-1.6.0 -- /home/theld/miniconda3/envs/mini_conda_02/bin/python
cachedir: .pytest_cache
rootdir: /home/theld/code/git_repos/feedback_portal
configfile: pytest.ini
plugins: anyio-4.7.0, base-url-2.1.0, asyncio-0.23.8, playwright-0.4.0
asyncio: mode=Mode.STRICT
collecting ... collected 88 items

tests/e2e/test_browser_compatibility.py::test_browser[chromium] PASSED   [  1%]
tests/e2e/test_delete_testing_data.py::test_delete_testing_range_page_loads[chromium] ERROR [  2%]
tests/e2e/test_delete_testing_data.py::test_min_max_id_inputs[chromium] ERROR [  3%]
tests/e2e/test_delete_testing_data.py::test_dry_run_checkbox_and_preview[chromium] ERROR [  4%]
tests/e2e/test_delete_testing_data.py::test_delete_button_and_real_delete[chromium] ERROR [  5%]
tests/e2e/test_delete_testing_data.py::test_diagnostics_messaging[chromium] ERROR [  6%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_upload_page_loads[chromium] ERROR [  7%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_input_exists[chromium] ERROR [  9%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_drop_zone_exists[chromium] ERROR [ 10%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx] ERROR [ 11%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_invalid_file_upload[chromium] ERROR [ 12%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_empty_file_upload[chromium] ERROR [ 13%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_large_file_upload[chromium] ERROR [ 14%]
tests/e2e/test_excel_upload_workflows.py::TestUploadPageElements::test_page_structure[chromium] ERROR [ 15%]
tests/e2e/test_excel_upload_workflows.py::TestUploadPageElements::test_form_structure[chromium] ERROR [ 17%]
tests/e2e/test_excel_upload_workflows.py::TestUploadPageElements::test_accessibility_features[chromium] ERROR [ 18%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx] ERROR [ 19%]
tests/e2e/test_excel_upload_workflows.py::test_list_staged_diagnostics_overlay[chromium] ERROR [ 20%]
tests/e2e/test_excel_upload_workflows.py::test_upload_file_only[chromium] ERROR [ 21%]
tests/e2e/test_excel_upload_workflows.py::test_discard_staged_file_only[chromium] ERROR [ 22%]
tests/e2e/test_excel_upload_workflows.py::test_upload_multiple_files_only[chromium] ERROR [ 23%]
tests/e2e/test_excel_upload_workflows.py::test_discard_each_staged_file_separately[chromium] ERROR [ 25%]
tests/e2e/test_excel_upload_workflows.py::test_upload_malformed_file_only[chromium] ERROR [ 26%]
tests/e2e/test_excel_upload_workflows.py::test_discard_malformed_file_only[chromium] ERROR [ 27%]
tests/e2e/test_feedback_updates.py::test_feedback_updates_page_loads[chromium] ERROR [ 28%]
tests/e2e/test_feedback_updates.py::test_feedback_updates_filter_functionality[chromium] ERROR [ 29%]
tests/e2e/test_feedback_updates.py::test_feedback_updates_download_csv_button[chromium] ERROR [ 30%]
tests/e2e/test_feedback_updates.py::test_feedback_updates_accessibility[chromium] ERROR [ 31%]
tests/e2e/test_feedback_updates.py::test_feedback_updates_empty_state[chromium] ERROR [ 32%]
tests/e2e/test_feedback_updates.py::test_feedback_updates_long_text_overflow[chromium] ERROR [ 34%]
tests/e2e/test_feedback_updates.py::test_feedback_updates_special_characters[chromium] ERROR [ 35%]
tests/e2e/test_feedback_updates.py::test_feedback_updates_date_range_boundaries[chromium] ERROR [ 36%]
tests/e2e/test_feedback_updates.py::test_feedback_updates_csv_download_with_filters[chromium] ERROR [ 37%]
tests/e2e/test_feedback_updates.py::test_feedback_updates_rapid_filter_changes[chromium] ERROR [ 38%]
tests/e2e/test_feedback_updates.py::test_feedback_updates_large_data_set[chromium] ERROR [ 39%]
tests/e2e/test_homepage.py::test_homepage_loads[chromium] ERROR          [ 40%]
tests/e2e/test_homepage.py::test_homepage_empty_state[chromium] ERROR    [ 42%]
tests/e2e/test_homepage.py::test_homepage_navigation_menu[chromium] ERROR [ 43%]
tests/e2e/test_homepage.py::test_homepage_accessibility[chromium] ERROR  [ 44%]
tests/e2e/test_homepage.py::test_homepage_card_content_and_links[chromium] ERROR [ 45%]
tests/e2e/test_homepage.py::test_homepage_card_navigation[chromium] ERROR [ 46%]
tests/e2e/test_homepage.py::test_homepage_pagination_or_scrolling[chromium] ERROR [ 47%]
tests/e2e/test_homepage.py::test_homepage_special_characters_and_long_text[chromium] ERROR [ 48%]
tests/e2e/test_javascript_logging.py::test_diagnostics_overlay_on_diagnostic_test_page[chromium] ERROR [ 50%]
tests/e2e/test_list_uploads.py::test_list_uploads_page_loads[chromium] ERROR [ 51%]
tests/e2e/test_list_uploads.py::test_list_uploads_file_links[chromium] ERROR [ 52%]
tests/e2e/test_list_uploads.py::test_list_uploads_accessibility[chromium] ERROR [ 53%]
tests/e2e/test_list_uploads.py::test_list_uploads_empty_state[chromium] ERROR [ 54%]
tests/e2e/test_menu_calsmp_help.py::test_calsmp_help_menu_links[chromium] ERROR [ 55%]
tests/e2e/test_menu_developer_utilities.py::test_developer_utilities_menu_links_and_create_incidence[chromium] ERROR [ 56%]
tests/e2e/test_review_staged.py::test_hide_changes_checkbox[chromium] ERROR [ 57%]
tests/e2e/test_review_staged.py::test_field_search_filter[chromium] ERROR [ 59%]
tests/e2e/test_review_staged.py::test_change_summary_card[chromium] ERROR [ 60%]
tests/e2e/test_review_staged.py::test_cancel_and_save_buttons[chromium] ERROR [ 61%]
tests/e2e/test_review_staged.py::test_confirm_checkboxes[chromium] ERROR [ 62%]
tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx] ERROR [ 63%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_02_bad_data.xlsx] ERROR [ 64%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_02_bad_data.xlsx] ERROR [ 65%]
tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx] ERROR [ 67%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_03_blank.xlsx] ERROR [ 68%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_03_blank.xlsx] ERROR [ 69%]
tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx] ERROR [ 70%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx] ERROR [ 71%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx] ERROR [ 72%]
tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx] ERROR [ 73%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data_update.xlsx] ERROR [ 75%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data_update.xlsx] ERROR [ 76%]
tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx] ERROR [ 77%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_02_bad_data.xlsx] ERROR [ 78%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_02_bad_data.xlsx] ERROR [ 79%]
tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx] ERROR [ 80%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx] ERROR [ 81%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx] ERROR [ 82%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_02_bad_data.xlsx] ERROR [ 84%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_02_bad_data.xlsx] ERROR [ 85%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx] ERROR [ 86%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx] ERROR [ 87%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_02_bad_data.xlsx] ERROR [ 88%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_02_bad_data.xlsx] ERROR [ 89%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx] ERROR [ 90%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx] ERROR [ 92%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_02_bad_data.xlsx] ERROR [ 93%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_02_bad_data.xlsx] ERROR [ 94%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx] ERROR [ 95%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx] ERROR [ 96%]
tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_02_bad_data.xlsx] ERROR [ 97%]
tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_02_bad_data.xlsx] ERROR [ 98%]
tests/e2e/test_playwright_setup.py::test_playwright_setup SKIPPED (S...) [100%]

==================================== ERRORS ====================================
_______ ERROR at setup of test_delete_testing_range_page_loads[chromium] _______

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
______________ ERROR at setup of test_min_max_id_inputs[chromium] ______________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
________ ERROR at setup of test_dry_run_checkbox_and_preview[chromium] _________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
________ ERROR at setup of test_delete_button_and_real_delete[chromium] ________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
____________ ERROR at setup of test_diagnostics_messaging[chromium] ____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
______ ERROR at setup of TestExcelUpload.test_upload_page_loads[chromium] ______

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
______ ERROR at setup of TestExcelUpload.test_file_input_exists[chromium] ______

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
______ ERROR at setup of TestExcelUpload.test_drop_zone_exists[chromium] _______

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_____ ERROR at setup of TestExcelUpload.test_invalid_file_upload[chromium] _____

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
______ ERROR at setup of TestExcelUpload.test_empty_file_upload[chromium] ______

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
______ ERROR at setup of TestExcelUpload.test_large_file_upload[chromium] ______

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
____ ERROR at setup of TestUploadPageElements.test_page_structure[chromium] ____

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
____ ERROR at setup of TestUploadPageElements.test_form_structure[chromium] ____

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestUploadPageElements.test_accessibility_features[chromium] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_______ ERROR at setup of test_list_staged_diagnostics_overlay[chromium] _______

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
______________ ERROR at setup of test_upload_file_only[chromium] _______________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
__________ ERROR at setup of test_discard_staged_file_only[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_________ ERROR at setup of test_upload_multiple_files_only[chromium] __________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_____ ERROR at setup of test_discard_each_staged_file_separately[chromium] _____

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_________ ERROR at setup of test_upload_malformed_file_only[chromium] __________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_________ ERROR at setup of test_discard_malformed_file_only[chromium] _________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_________ ERROR at setup of test_feedback_updates_page_loads[chromium] _________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
____ ERROR at setup of test_feedback_updates_filter_functionality[chromium] ____

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
____ ERROR at setup of test_feedback_updates_download_csv_button[chromium] _____

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_______ ERROR at setup of test_feedback_updates_accessibility[chromium] ________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
________ ERROR at setup of test_feedback_updates_empty_state[chromium] _________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_____ ERROR at setup of test_feedback_updates_long_text_overflow[chromium] _____

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_____ ERROR at setup of test_feedback_updates_special_characters[chromium] _____

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
___ ERROR at setup of test_feedback_updates_date_range_boundaries[chromium] ____

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_feedback_updates_csv_download_with_filters[chromium] __

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
____ ERROR at setup of test_feedback_updates_rapid_filter_changes[chromium] ____

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_______ ERROR at setup of test_feedback_updates_large_data_set[chromium] _______

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_______________ ERROR at setup of test_homepage_loads[chromium] ________________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
____________ ERROR at setup of test_homepage_empty_state[chromium] _____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
__________ ERROR at setup of test_homepage_navigation_menu[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
___________ ERROR at setup of test_homepage_accessibility[chromium] ____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_______ ERROR at setup of test_homepage_card_content_and_links[chromium] _______

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
__________ ERROR at setup of test_homepage_card_navigation[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
______ ERROR at setup of test_homepage_pagination_or_scrolling[chromium] _______

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
__ ERROR at setup of test_homepage_special_characters_and_long_text[chromium] __

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_diagnostics_overlay_on_diagnostic_test_page[chromium] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
___________ ERROR at setup of test_list_uploads_page_loads[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
___________ ERROR at setup of test_list_uploads_file_links[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_________ ERROR at setup of test_list_uploads_accessibility[chromium] __________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
__________ ERROR at setup of test_list_uploads_empty_state[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
___________ ERROR at setup of test_calsmp_help_menu_links[chromium] ____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_developer_utilities_menu_links_and_create_incidence[chromium] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
____________ ERROR at setup of test_hide_changes_checkbox[chromium] ____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_____________ ERROR at setup of test_field_search_filter[chromium] _____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_____________ ERROR at setup of test_change_summary_card[chromium] _____________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
___________ ERROR at setup of test_cancel_and_save_buttons[chromium] ___________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_____________ ERROR at setup of test_confirm_checkboxes[chromium] ______________

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_incremental_upload[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_incremental_upload[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_03_blank.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_03_blank.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_incremental_upload[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_incremental_upload[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data_update.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data_update.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_incremental_upload[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_incremental_upload[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of TestExcelUpload.test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
_ ERROR at setup of test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_02_bad_data.xlsx] _

launch_browser = <function launch_browser.<locals>.launch at 0x7f31cec5f740>

    @pytest.fixture(scope="session")
    def browser(launch_browser: Callable[[], Browser]) -> Generator[Browser, None, None]:
>       browser = launch_browser()

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/pytest_playwright/pytest_playwright.py:212: in launch
    browser = browser_type.launch(**launch_options)
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14806: in launch
    self._sync(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:95: in launch
    Browser, from_channel(await self._channel.send("launch", params))
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:62: in send
    return await self._connection.wrap_api_call(
../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Channel object at 0x7f31ceb07cd0>
method = 'launch', params = {}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -> Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(
            self._object, method, params
        )
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
>       result = next(iter(done)).result()
E       playwright._impl._errors.Error: 
E       ╔══════════════════════════════════════════════════════╗
E       ║ Host system is missing dependencies to run browsers. ║
E       ║ Please install them with the following command:      ║
E       ║                                                      ║
E       ║     sudo playwright install-deps                     ║
E       ║                                                      ║
E       ║ Alternatively, use apt:                              ║
E       ║     sudo apt-get install libatk-bridge2.0-0\         ║
E       ║         libxkbcommon0\                               ║
E       ║         libatspi2.0-0\                               ║
E       ║         libasound2                                   ║
E       ║                                                      ║
E       ║ <3 Playwright Team                                   ║
E       ╚══════════════════════════════════════════════════════╝

../../../miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/playwright/_impl/_connection.py:100: Error
=============================== warnings summary ===============================
tests/e2e/test_browser_compatibility.py::test_browser[chromium]
  /home/theld/miniconda3/envs/mini_conda_02/lib/python3.11/site-packages/_pytest/python.py:198: PytestReturnNotNoneWarning: Expected None, but tests/e2e/test_browser_compatibility.py::test_browser[chromium] returned False, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
ERROR tests/e2e/test_delete_testing_data.py::test_delete_testing_range_page_loads[chromium]
ERROR tests/e2e/test_delete_testing_data.py::test_min_max_id_inputs[chromium]
ERROR tests/e2e/test_delete_testing_data.py::test_dry_run_checkbox_and_preview[chromium]
ERROR tests/e2e/test_delete_testing_data.py::test_delete_button_and_real_delete[chromium]
ERROR tests/e2e/test_delete_testing_data.py::test_diagnostics_messaging[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_upload_page_loads[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_input_exists[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_drop_zone_exists[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_invalid_file_upload[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_empty_file_upload[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_large_file_upload[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestUploadPageElements::test_page_structure[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestUploadPageElements::test_form_structure[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::TestUploadPageElements::test_accessibility_features[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_list_staged_diagnostics_overlay[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_upload_file_only[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_discard_staged_file_only[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_upload_multiple_files_only[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_discard_each_staged_file_separately[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_upload_malformed_file_only[chromium]
ERROR tests/e2e/test_excel_upload_workflows.py::test_discard_malformed_file_only[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_page_loads[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_filter_functionality[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_download_csv_button[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_accessibility[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_empty_state[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_long_text_overflow[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_special_characters[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_date_range_boundaries[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_csv_download_with_filters[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_rapid_filter_changes[chromium]
ERROR tests/e2e/test_feedback_updates.py::test_feedback_updates_large_data_set[chromium]
ERROR tests/e2e/test_homepage.py::test_homepage_loads[chromium] - playwright....
ERROR tests/e2e/test_homepage.py::test_homepage_empty_state[chromium] - playw...
ERROR tests/e2e/test_homepage.py::test_homepage_navigation_menu[chromium] - p...
ERROR tests/e2e/test_homepage.py::test_homepage_accessibility[chromium] - pla...
ERROR tests/e2e/test_homepage.py::test_homepage_card_content_and_links[chromium]
ERROR tests/e2e/test_homepage.py::test_homepage_card_navigation[chromium] - p...
ERROR tests/e2e/test_homepage.py::test_homepage_pagination_or_scrolling[chromium]
ERROR tests/e2e/test_homepage.py::test_homepage_special_characters_and_long_text[chromium]
ERROR tests/e2e/test_javascript_logging.py::test_diagnostics_overlay_on_diagnostic_test_page[chromium]
ERROR tests/e2e/test_list_uploads.py::test_list_uploads_page_loads[chromium]
ERROR tests/e2e/test_list_uploads.py::test_list_uploads_file_links[chromium]
ERROR tests/e2e/test_list_uploads.py::test_list_uploads_accessibility[chromium]
ERROR tests/e2e/test_list_uploads.py::test_list_uploads_empty_state[chromium]
ERROR tests/e2e/test_menu_calsmp_help.py::test_calsmp_help_menu_links[chromium]
ERROR tests/e2e/test_menu_developer_utilities.py::test_developer_utilities_menu_links_and_create_incidence[chromium]
ERROR tests/e2e/test_review_staged.py::test_hide_changes_checkbox[chromium]
ERROR tests/e2e/test_review_staged.py::test_field_search_filter[chromium] - p...
ERROR tests/e2e/test_review_staged.py::test_change_summary_card[chromium] - p...
ERROR tests/e2e/test_review_staged.py::test_cancel_and_save_buttons[chromium]
ERROR tests/e2e/test_review_staged.py::test_confirm_checkboxes[chromium] - pl...
ERROR tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_02_bad_data.xlsx]
ERROR tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_03_blank.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/dairy_digester_operator_feedback_v006_test_03_blank.xlsx]
ERROR tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data.xlsx]
ERROR tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data_update.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_01_good_data_update.xlsx]
ERROR tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/energy_operator_feedback_v003_test_02_bad_data.xlsx]
ERROR tests/e2e/test_review_staged.py::test_incremental_upload[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/generic_operator_feedback_v002_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v070_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/landfill_operator_feedback_v071_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_01_good_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::TestExcelUpload::test_file_upload_workflow[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_02_bad_data.xlsx]
ERROR tests/e2e/test_excel_upload_workflows.py::test_excel_upload_deep_backend_validation[chromium-feedback_forms/testing_versions/standard/oil_and_gas_operator_feedback_v070_test_02_bad_data.xlsx]
============= 1 passed, 1 skipped, 1 warning, 86 errors in 16.29s ==============
